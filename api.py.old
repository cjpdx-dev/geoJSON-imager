import time
import os

from flask import Flask, render_template, request, redirect, url_for, jsonify
from flask_pymongo import PyMongo

#from Werkzeug.http import HTTP_STATUS

from services import geojson_service, zip_service


# init app and database
app = Flask(__name__)
app.config["MONGO_URI"] = "mongodb://localhost:27017/appDatabase"
mongo = PyMongo(app)

# placeholder for database - config the upload folder for map uploads
# and specify max file size
app.config['UPLOAD_FOLDER'] = "uploads/"
app.config['MAX_CONTENT_LENGTH'] = 1024 * 1024 * 1024

# a test endpoint
@app.route('/time')
def get_current_time():
	return {'time': time.time()}

@app.route('/')
def home_page():
	pass

# route for uploading a map from the home screen (user not logged in)
@app.route('/upload', methods=['POST'])
def upload_file():
	uploaded_file = request.files['file']
	if uploaded_file.filename != '':
		file_path = os.path.join(app.config['UPLOAD_FOLDER'], uploaded_file.filename)
		uploaded_file.save(file_path)

		payload = {'file uploaded': 'true'}
		response = jsonify(payload)
		return response

@app.route('/view_map')
def 

# def generate_map():


# @app.route('/validate_zip', methods=['GET'])
# def validate_zip():

